name: .NET Build, Test, Publish, SonarCloud

on:
  workflow_call:
    inputs:
      publish:
        required: true
        type: boolean

jobs:
  build-test-publish:
    name: Test and publish artifact
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install tool
        run: dotnet tool install --global dotnet-coverage

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --logger "trx;LogFileName=TestResults.xml"

      - name: Coverage
        run: dotnet-coverage collect "dotnet test" -f xml -o "TestResults/coverage.xml"

      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: "**/TestResults"

      - name: dotnet publish
        if: ${{ inputs.publish }}
        run: dotnet publish LocalVenue/LocalVenue.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        if: ${{ inputs.publish }}
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  sonarcloud:
    name: SonarCloud analysis
    runs-on: windows-latest
    needs: build-test-publish

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu" # Alternative distribution options are available.

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install dotnet-coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Nicolas-Mousten_LocalVenue" /o:"nicolas-mousten" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="**/coverage.xml" /d:sonar.cs.vstest.reportsPaths="**/TestResults.trx"
          dotnet build --no-incremental
          dotnet test --no-build --logger "trx;LogFileName=TestResults.trx"
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
